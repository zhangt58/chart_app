name: Build Qt Projects on Linux

on:
  push:
    tags: [ '*' ]

env:
  LANG: "C.UTF-8"
  LC_ALL: "C.UTF-8"
  # Qt project file
  PRO_NAME: "mychartapp.pro"
  # executable name
  EXEC_NAMES: "mychartapp"
  MAIN_EXEC: "mychartapp"
  APP: "chart-app"
  APP_DESC: "A simple chart app with Qt6"
  DIST_DIR: "dist"

jobs:
  Build-App:
    runs-on: ubuntu-latest
    container:
      image: tonyzhang/focal-builder:5.2
    steps:
      - name: Install dependencies
        run: |
          apt-get update -q -y
          # install dependencies via apt
          # apt-get install -y libpulsedsp
      - name: Check building env
        run: |
          /tmp/squashfs-root/AppRun --version
          /usr/lib/qt-new/bin/qmake --version
          makeself --version
          dos2unix --version
          apt-cache policy libpulsedsp
      - name: Checkout repo
        uses: actions/checkout@v2.3.1
        with:
          persist-credentials: false
      - name: Check working directory
        run: |
          pwd
          ls -lhtr
      - name: Set Envs
        run: |
          echo "EXECS=${{env.EXEC_NAMES}}" >> "$GITHUB_ENV"
          echo "EXEC0=${{env.MAIN_EXEC}}" >> "$GITHUB_ENV"
          echo "QT_DEPLOYER_PATH=/tmp/squashfs-root/AppRun" >> "$GITHUB_ENV"
          echo "QT_DEPLOYER_OPTS=-bundle-non-qt-libs -no-translations" >> "$GITHUB_ENV"
          echo "QMAKE=/usr/lib/qt-new/bin/qmake" >> "$GITHUB_ENV"
          echo "MAKESELF_PATH=makeself" >> "$GITHUB_ENV"
          echo "MAKESELF_OPTS=--notemp --nox11 --tar-quietly --xz" >> "$GITHUB_ENV"
          echo "TAG_NAME=$(echo ${{github.ref_name}})" >> "$GITHUB_ENV"
          echo "DIST=${{env.DIST_DIR}}" >> "$GITHUB_ENV"
          echo "APP_NAME=${{env.APP}}" >> "$GITHUB_ENV"
      - name: Check Envs
        run: |
          echo "$EXECS"
          echo "$EXEC0"
          echo "$QT_DEPLOYER_PATH"
          echo "$QT_DEPLOYER_OPTS"
          echo "$QMAKE"
          echo "$MAKESELF_PATH"
          echo "$MAKESELF_OPTS"
          echo "$TAG_NAME"
          echo "$DIST"
          echo "$APP_NAME"
      - name: Build binaries
        run: |
          echo "Hello, ${{github.actor}}!"
          "$QMAKE" CONFIG+=release CONFIG+=optimize_full "${{ env.PRO_NAME }}"
          make -j$(cat /proc/cpuinfo | /bin/grep processor | wc -l)

          echo "Create binary tarball"
          mkdir ${DIST}
          cp -r ${EXECS} ${DIST}
          cd ${DIST}
          for app in ${EXECS}
          do
              ${QT_DEPLOYER_PATH} ${app} -qmake=${QMAKE} ${QT_DEPLOYER_OPTS}
              strip --strip-unneeded ${app}
          done
          cat << EOF > run_app.sh
          #!/bin/sh
          cwdir=\`dirname \$0\`
          \${cwdir}/${EXEC0}
          EOF
          chmod +x run_app.sh

          cd ..; tar cv ${DIST} | xz -9 > "${APP_NAME}_${TAG_NAME}.orig.tar.xz"

          echo "Create self-extractable script"
          "${MAKESELF_PATH}" ${MAKESELF_OPTS} ${DIST} "${APP_NAME}_${TAG_NAME}.run" \
            "${{env.APP_DESC}}" ./run_app.sh
          echo "New version released: ${TAG_NAME}."

      - name: Publish binary packages (1)
        uses: actions/upload-artifact@v4
        with:
          name: Binary tarball
          path: ${{ env.APP }}_${{ env.TAG_NAME }}.orig.tar.xz
          retention-days: 7

      - name: Publish binary packages (2)
        uses: actions/upload-artifact@v4
        with:
          name: Self-extract run file
          path: ${{ env.APP }}_${{ env.TAG_NAME }}.run
          retention-days: 7
